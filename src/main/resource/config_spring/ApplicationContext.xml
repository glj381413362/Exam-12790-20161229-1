<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-autowire="byType">
	<context:component-scan base-package="com.command"></context:component-scan>
	<context:annotation-config />

	<!-- ============================== 数据库配置 ==================================== -->
	<context:property-placeholder location="dbconfig.properties"></context:property-placeholder>
	<!-- 数据源配置 -->
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>

	<!-- ================================ MyBatis SqlSession配置 ========================================= -->
	<!-- 使用SqlSessionFactoryBean工厂产生SqlSession对象，方便后期注入Dao -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--configLocation属性指定mybatis的核心配置文件 -->
		<property name="configLocation" value="classpath:config_mybits/Configuration.xml" />
	</bean>

	<bean id="filmMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<!--sqlSessionFactory属性指定要用到的SqlSessionFactory实例 -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<!--mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象 -->
		<property name="mapperInterface" value="com.dao.FilmDao" />
	</bean>

	<!-- ================================= 事务控制相关 ============================================= -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />

			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置Aspect Bean -->
	<bean id="runningTimeAspect" class="com.aop.RunningTimeAspect"></bean>

	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.dao.*.*(..)))" />
		<aop:pointcut id="myPointCut" expression="execution(* com.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />

		<aop:aspect ref="runningTimeAspect">
			<aop:before method="beforeMethod" pointcut-ref="myPointCut" />
			<aop:after-returning method="afterReturnMethod"
				pointcut-ref="myPointCut" returning="result" />
			<aop:around method="aroundMethod" pointcut-ref="myPointCut" />
		</aop:aspect>
	</aop:config>


	<!-- -->
	<bean id="filmValidator" class="com.validator.FilmValidator"></bean>

	<!-- 执行者bean                      Xml配置注入 -->
	<bean id ="receiver" class="com.command.receiver.Receiver">
		<property name="filmService" ref="filmServiceImpl"></property>
	</bean>
	

	<!--start model -->
	<bean name="film" class="com.model.Film"></bean>
	<!--end model -->



	<!-- ===================================start dao层 ===================================== -->
	<!-- <bean name="filmDao" class="com.dao.FilmDao"></bean> -->
	<!-- ===================================end dao层 ===================================== -->



	<!-- ===================================start event层 ===================================== -->

	<bean name="applicationStartEvent" class="com.event.StartConEvent"></bean>
	<bean name="applicationStopEvent" class="com.event.StopConEvent"></bean>
	
	<!-- 监听者 -->
	<!-- <bean id="eventListener" class="com.event.EventListener"></bean> -->

	<!-- ===================================end event层 ===================================== -->
 


	<!-- ===================================start Service层 ===================================== -->
	<bean id="filmServiceImpl" class="com.service.impl.FilmServiceImpl"	autowire="byType">
		</bean>
	<!-- ===================================end Service层 ===================================== -->

</beans>